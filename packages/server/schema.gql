# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Permissions {
  _id: ID!

  """ID of the user from the Auth microservice"""
  user: ID!

  """The bucket that the user permission is on"""
  bucket: String!

  """If the user has read access to the bucket"""
  read: Boolean!

  """If the user has write access to the bucket"""
  write: Boolean!

  """If the user can delete objects in the bucket"""
  delete: Boolean!

  """If the user can modify permissions on the bucket"""
  admin: Boolean!
}

"""Keeps track of the buckets that belong to a project"""
type Project {
  _id: ID!

  """Auth microservice project ID"""
  project: ID!

  """List of buckets that belong to the project"""
  buckets: [String!]!
}

type SignedReqeuest {
  """AWS Signature based on the request"""
  signature: String!

  """SHA256 Hashed Body"""
  bodyHash: String!
}

type Query {
  """Get all permissions for the user of the JWT for their project"""
  getPermissions: [Permissions!]!
  getPermissionsForBucket(bucket: String!): Permissions!
  getBucketsForProject(project: String!): [String!]!
  signRequest(request: ResourceRequest!): SignedReqeuest!
}

"""Wrapper for AWS HttpRequest"""
input ResourceRequest {
  method: String!
  protocol: String!
  hostname: String!
  port: Float
  path: String!
  query: JSON!
  headers: JSON!
  body: JSON
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  changePermissions(change: PermissionChange!, user: String!, bucket: String!): Permissions!
  serviceAddUser(user: String!, project: String!): [Permissions!]!
  serviceChangePermissions(change: PermissionChange!, user: String!, bucket: String!): Permissions!

  """Add a bucket to a project, if the project is new it will be created"""
  addBucketToProject(project: String!, bucket: String!): Project!
}

input PermissionChange {
  read: Boolean!
  write: Boolean!
  delete: Boolean!
  admin: Boolean!
}