# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserModel {
  id: ID!
}

type CargoPermissions {
  _id: ID!
  user: UserModel!

  """The bucket that the user permission is on"""
  bucket: String!

  """If the user has read access to the bucket"""
  read: Boolean!

  """If the user has write access to the bucket"""
  write: Boolean!

  """If the user can delete objects in the bucket"""
  delete: Boolean!

  """If the user can modify permissions on the bucket"""
  admin: Boolean!
}

type CargoSignedRequest {
  """AWS Signature based on the request"""
  signature: String!

  """SHA256 Hashed Body"""
  bodyHash: String!

  """AWS format timestamp"""
  timestamp: String!
}

type Query {
  """Get all permissions for the user of the JWT for their project"""
  cargoGetPermissions: [CargoPermissions!]!

  """
  Allows the currently authenticated user to get their own permisisons for a bucket
  """
  cargoGetPermissionsForBucket(bucket: String!): CargoPermissions!

  """Means for the admin to get all permissions for a given bucket"""
  cargoGetAllBucketPermissions(bucket: String!): [CargoPermissions!]!
  cargoSignRequest(request: CargoResourceRequest!): CargoSignedRequest!
}

"""Wrapper for AWS HttpRequest"""
input CargoResourceRequest {
  method: String!
  protocol: String!
  hostname: String!
  port: Float
  path: String!
  query: JSON!
  headers: JSON!
  body: JSON
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  cargoChangePermissions(change: CargoPermissionChange!, user: String!, bucket: String!): CargoPermissions!
  cargoServiceAddUser(user: String!, project: String!): [CargoPermissions!]!
  cargoServiceChangePermissions(change: CargoPermissionChange!, user: String!, bucket: String!): CargoPermissions!
}

input CargoPermissionChange {
  read: Boolean!
  write: Boolean!
  delete: Boolean!
  admin: Boolean!
}